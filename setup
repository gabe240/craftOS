function reading()
  sleep(0.5)
  write "."
end

term.clear()
term.setCursorPos(1,1)
shell.run('disk/mem/redworks/apis/redworks')
print("                                  _____  __             .___         _________")
print(" __ __  ____   ________________ _/ ____\/  |_  ____   __| _/   ____ /   _____/")
print("|  |  \/    \_/ ___\_  __ \__  \\   __\\   __\/ __ \ / __ |   /  _ \\_____  \ ")
print("|  |  /   |  \  \___|  | \// __ \|  |   |  | \  ___// /_/ |  (  <_> )        \")
print("|____/|___|  /\___  >__|  (____  /__|   |__|  \___  >____ |   \____/_______  /")
print("           \/     \/           \/                 \/     \/                \/ ")

--Pre-Install
term.setCursorPos(1,5)
print"+________________________________________________+"
term.setCursorPos(20,7)
sprint("CAUTION!!!")
term.setCursorPos(1,8)
print"+------------------------------------------------+"
print("\nThis will remove any previous installation\nof joes crap on this Terminal.\nPlease make Backups if necessary.")
term.setCursorPos(1,17)
print("To proceed press ENTER. To Cancel Press BACKSPACE")
while true do
fault, event, param1, param2, param3 = pcall(os.pullEvent)
if fault == false then 
elseif event == "key" and param1 == 14 then
shell.run("disk/startup")
elseif event == "key" and param1 == 28 then
break end
end
fs.delete("startup")
fs.delete("logic/")
fs.delete("mem/")
fs.delete("ACCOUNTS.F")

--Installation
term.clear()
term.setCursorPos(1,2)
write "Preparing files"
for n=1,5 do
reading()
end
write "\n\nInstalling joes core files"
for n=1,4 do
reading()
end
print"Done."
write "\nInstalling joes libraries"
for n=1,3 do
reading()
end
print"Done."
write "\nInstalling joes programs"
for n=1,2 do
reading()
end
print"Done."
write "\nChecking for broken files"
for n=1,2 do
reading()
end
print"Done."

fs.copy("disk/launcher", "startup")
fs.makeDir("logic/")
fs.copy("disk/mem/autorun/", "mem/autorun")
fs.copy("disk/mem/redworks/apis/", "mem/redworks/apis")
fs.copy("disk/mem/redworks/help/", "mem/redworks/help")
fs.copy("disk/mem/redworks/libs/", "mem/redworks/libs")
fs.copy("disk/mem/redworks/minepedia/", "mem/redworks/minepedia")
fs.copy("disk/mem/redworks/programs/", "mem/redworks/programs")
sleep(2)

--Exit
term.clear()
term.setCursorPos(1,1)
print("                 +---------------+")
term.setCursorPos(18,2)
print("!Congratulations!")
term.setCursorPos(1,3)
print("                 +---------------+")
term.setCursorPos(1,5)
sprint("You've successfully installed Redworks\non Terminal # " ..os.getComputerID()..".")
print("\nPut your floppy away, or use it to install Redworks on another Terminal.")
print("\nBe sure to stop by the forums for updates, suggestions and technical support.\n Take the floppy out and reboot the Terminal.\n\nThank You for choosing Redworks!")
term.setCursorPos(1,17)
print("Press BACKSPACE to return.")
while true do
fault, event, param1, param2, param3 = pcall(os.pullEvent)
if fault == false then 
elseif event == "key" and param1 == 14 then
shell.run("disk/startup")
break end
end